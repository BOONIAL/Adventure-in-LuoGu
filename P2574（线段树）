//https://www.luogu.com.cn/problem/P2574
#include<bits/stdc++.h>
using namespace std;

#define ll long long
string str;
int n,m,b,c,d,a[300020];
ll sum[300020<<2],tag[300020<<2];

void build(int l,int r,int p){//建树
    if(l==r){
        sum[p]=a[l];
        return;
    }
    int mid=(l+r)>>1;
    build(l,mid,p<<1);//递归
    build(mid+1,r,p<<1|1);
    sum[p]=sum[p<<1]+sum[p<<1|1];
}

void pushdown(int p,int len){//下传
    if(tag[p]){
        tag[p<<1]^=1,tag[p<<1|1]^=1;//下传给儿子
        sum[p<<1]=(len-(len>>1))-sum[p<<1];//xor等价于串的长度-原来的1的个数
        sum[p<<1|1]=(len>>1)-sum[p<<1|1];
        tag[p]=0;//清零
    }
}

ll query(int L,int R,int l,int r,int p){//查询
    if(L<=l&&R>=r)
        return sum[p];
    pushdown(p,r-l+1);//查询时下传
    int mid=(l+r)/2;
    ll tot=0;
    if(L<=mid)
        tot+=query(L,R,l,mid,p<<1);
    if(R>=mid+1)
        tot+=query(L,R,mid+1,r,p<<1|1);
    return tot;
}
void update(int L,int R,int l,int r,int p){//更新
    pushdown(p,r-l+1);//更新也要下传
    if(L<=l&&r<=R){
        tag[p]^=1;//lazytag两次lazytag等于没有操作过
        sum[p]=r-l+1-sum[p];//更新答案
        return;
    }
    int mid=(r+l)/2;
    if(L<=mid) update(L,R,l,mid,p<<1);
    if(R>=mid+1) update(L,R,mid+1,r,p<<1|1);
    sum[p]=sum[p<<1]+sum[p<<1|1];
}
int main(){
    cin>>n>>m>>str;
    for(int i=0;i<str.length();i++){
        a[i+1]=str[i]-'0';
    }
    build(1,n,1);
    for(int i=1;i<=m;i++){
        cin>>b>>c>>d;
        if(b==0){
            update(c,d,1,n,1);
        }
        if(b==1){
            cout<<query(c,d,1,n,1)<<endl;;
        }
    }
}
