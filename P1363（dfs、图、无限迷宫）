//https://www.luogu.com.cn/problem/P1363
#include<bits/stdc++.h>
using namespace std;

const int MAXN = 1500 + 1;
const int dx[4] = {1, -1, 0, 0};
const int dy[4] = {0, 0, 1, -1};

int n, m;
int st_x, st_y;
int vis[MAXN][MAXN][3];
bool fl, a[MAXN][MAXN];
char ch;

void dfs(int x, int y, int lx, int ly) {//x、y取模坐标。lx、ly未取模坐标。
    if(fl) return;
    if(vis[x][y][0] && (vis[x][y][1]!=lx || vis[x][y][2]!=ly)) {//x、y取模坐标。lx、ly未取模坐标。两组数据不相等，代表第二次走过。
        fl = 1;
        return;
    }
    vis[x][y][1] = lx, vis[x][y][2] = ly, vis[x][y][0] = 1;//vis[x][y][1] = lx, vis[x][y][2] = ly, 储存当前未取模的坐标。（取模坐标的真实坐标。）
    for(int i=0; i<4; ++i) {
        int xx = (x + dx[i] + n) % n, yy = (y + dy[i] + m) % m;
        int lxx = lx + dx[i], lyy = ly + dy[i];
        if(!a[xx][yy]) {
            if(vis[xx][yy][1]!=lxx || vis[xx][yy][2]!=lyy || !vis[xx][yy][0])//与21行对应，表示从来没有被访问过。如果全部相等，代表访问过。
                dfs(xx, yy, lxx, lyy);
        }
    }
}
int main() {
    ios::sync_with_stdio(false);
    while(cin >> n >> m) {
        fl = 0;
        memset(a, 0, sizeof(a));
        memset(vis, 0, sizeof(vis));
        for(int i=0; i<n; ++i)
            for(int j=0; j<m; ++j) {
                cin >> ch;
                if(ch == '#') a[i][j] = 1;
                if(ch == 'S') st_x = i, st_y = j;
            }
        dfs(st_x, st_y, st_x, st_y);
        if(fl) puts("Yes");
        else puts("No");
    }
}
